let CERTIFICATES,GLOBALS,VENDORS,site_metric,site_metric_id,remove_image,save_image;_c21‍.x([["new_vendor",()=>new_vendor],["vendors",()=>vendors],["certificates",()=>certificates],["add_certificate",()=>add_certificate],["vendor_certificates",()=>vendor_certificates],["update_certification",()=>update_certification],["remove_certification",()=>remove_certification]]);_c21‍.w("../ds/conn",[["CERTIFICATES",["CERTIFICATES"],function(v){CERTIFICATES=v}],["GLOBALS",["GLOBALS"],function(v){GLOBALS=v}],["VENDORS",["VENDORS"],function(v){VENDORS=v}]]);_c21‍.w("./starter",[["site_metric",["site_metric"],function(v){site_metric=v}],["site_metric_id",["site_metric_id"],function(v){site_metric_id=v}]]);_c21‍.w("./utils",[["remove_image",["remove_image"],function(v){remove_image=v}],["save_image",["save_image"],function(v){save_image=v}]]);



const new_vendor = (req, res) => {
  let vendor = req.body;

  let result = VENDORS.write(vendor);
  GLOBALS.update({ global: site_metric }, { vendors: { $inc: 1 } });

  res.json({
    ok: true,
    message: "new vendor",
    data: { _id: result._id, created: result.created },
  });
};

const vendors = (req, res) => {
  let { limit } = req;

  let vendors_ = VENDORS.read(null, { limit: Number(limit) });

  res.json({ ok: true, message: "vendors", data: vendors_ });
};

const add_certificate = (req, res) => {
  let certificate = req.body;

  certificate.image = save_image(certificate.image);

  let result = CERTIFICATES.write(certificate);
  GLOBALS.update(
    { global: site_metric, _id: site_metric_id },
    { certificates: { $inc: 1 } }
  );

  res.json({
    ok: true,
    message: "certificate added",
    data: {
      _id: result._id,
      created: result.created,
      image: certificate.image,
    },
  });
};

const vendor_certificates = (req, res) => {
  let { vendor } = req.params;

  res.json({
    ok: true,
    message: "certificates",
    data: CERTIFICATES.read({ vendor }),
  });
};

const update_certification = (req, res) => {
  let cert = req.body;

  cert.image = save_image(cert.image);

  CERTIFICATES.update({ _id: cert._id, vendor: cert.vendor }, cert);

  res.json({
    ok: true,
    message: "certificate updated",
    data: { _id: cert._id, created: cert.created },
  });
};

const remove_certification = (req, res) => {
  let query = req.body;

  let result = CERTIFICATES.remove(query);
  result && remove_image(result.image);

  GLOBALS.update({ global: site_metric }, { certificates: { $dec: 1 } });

  res.end;
};

const certificates = (req, res) => {
  let { limit } = req.params;

  let vendors = VENDORS.read().map((v) => v._id);

  res.json({
    ok: true,
    message: "certificates",
    data: CERTIFICATES.read(null, { subfolder: vendors }),
  });
};










