let GDS;_e49‍.x([["gds",()=>gds],["USERS",()=>USERS],["ADMIN_HASH",()=>ADMIN_HASH],["QUESTIONS",()=>QUESTIONS],["ADMINSTRATORS",()=>ADMINSTRATORS],["CERTIFICATES",()=>CERTIFICATES],["USERS_HASH",()=>USERS_HASH],["EBOOKS",()=>EBOOKS],["VENDORS",()=>VENDORS],["GLOBALS",()=>GLOBALS],["EXAMS",()=>EXAMS],["FAQS",()=>FAQS],["default",()=>_e49‍.o]]);_e49‍.w("generalised-datastore",[["default",["GDS"],function(v){GDS=v}]]);

let gds;

let USERS,
  ADMINSTRATORS,
  CERTIFICATES,
  VENDORS,
  ADMIN_HASH,
  EBOOKS,
  FAQS,
  EXAMS,
  GLOBALS,
  QUESTIONS,
  USERS_HASH;

const ds_conn = () => {
  _e49‍.u(gds = new GDS("QNA").sync());

  _e49‍.u(USERS = gds.folder("users"));
  _e49‍.u(ADMINSTRATORS = gds.folder("adminstrators"));
  _e49‍.u(ADMIN_HASH = gds.folder("admin_hash", "admin"));
  _e49‍.u(GLOBALS = gds.folder("globals", "global"));
  _e49‍.u(VENDORS = gds.folder("vendors"));
  _e49‍.u(CERTIFICATES = gds.folder("certificates", "vendor", "vendor"));
  _e49‍.u(USERS_HASH = gds.folder("user_hash", "user"));
  _e49‍.u(EXAMS = gds.folder("exams", "certificate", "certificate"));
  _e49‍.u(EBOOKS = gds.folder("ebooks", null, "exam"));
  _e49‍.u(QUESTIONS = gds.folder("questions", "exam"));
  _e49‍.u(FAQS = gds.folder("faqs"));
};















_e49‍.d(ds_conn);
